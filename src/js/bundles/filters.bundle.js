/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/filters.js":
/*!***************************!*\
  !*** ./src/js/filters.js ***!
  \***************************/
/***/ (() => {

eval("window.filtersJS = {\r\n    setValueSlider : function ($input) {\r\n        var dataId = $input.attr(\"data-id\");\r\n        var minValue = Number($(\"#\"+dataId+\"MinValue\").val().replaceAll(\".\",\"\"));\r\n        var maxValue =  Number($(\"#\"+dataId+\"MaxValue\").val().replaceAll(\".\",\"\"));\r\n        $('#'+dataId).slider('setValue',[minValue,maxValue]);\r\n    },\r\n\r\n    clearTimers : function () {\r\n        if (window.variablesJS.timeout) {\r\n            clearTimeout(window.variablesJS.timeout);\r\n        }\r\n        if (window.variablesJS.interval) {\r\n            clearInterval(window.variablesJS.interval);\r\n        }\r\n    },\r\n\r\n    incrementValue : function ($input, value) {\r\n        $input.val(new Intl.NumberFormat('de-DE').format(Number(value) + 1));\r\n    },\r\n\r\n    decrementValue : function ($input, value) {\r\n        $input.val(new Intl.NumberFormat('de-DE').format(Number(value) - 1));\r\n    },\r\n\r\n    getMinMaxValue : function (values, isDivide) {\r\n        if (!values) return {};\r\n        var items = values.split(\",\").map(x => Number(x));\r\n        if (isDivide) {\r\n            return { min: items[0] !== null ? items[0]/100: 0, max: items[1] !== null ? items[1]/100: 0 };\r\n        } else {\r\n            return { min: items[0] !== null ? items[0]: 0, max: items[1] !== null ? items[1]: 0 };\r\n        }\r\n    },\r\n    \r\n    filterData : function () {\r\n        var loadingHTML = window.commonJS.getLoadingHTML();\r\n        // Basic\r\n        var exchanges = [];\r\n        var hsx = $('#btnFilterHSXOption:checked').val();\r\n        var hnx = $('#btnFilterHNXOption:checked').val();\r\n        var upcom = $('#btnFilterUPCOption:checked').val();\r\n        if (hsx) {\r\n            exchanges.push(hsx);\r\n        }\r\n        if (hnx) {\r\n            exchanges.push(hnx);\r\n        }\r\n        if (upcom) {\r\n            exchanges.push(upcom);\r\n        }\r\n    \r\n        var fielSelection = $('#fields-selection-options').val();\r\n        // FA - Fundamental Analysis\r\n        var faFilter = {};\r\n        // C\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionC[0].id) > -1) {\r\n            faFilter.NetSale_Growth_MRQ = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionC).val(), true);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionC1[0].id) > -1) {\r\n            faFilter.Profit_Growth_MRQ = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionC1).val(), true);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionC2[0].id) > -1) {\r\n            faFilter.Profit_Growth_MRQ_2 = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionC2).val(), true);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionC3[0].id) > -1) {\r\n            faFilter.Profit_Growth_TTM = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionC3).val(), true);\r\n        }\r\n        // A\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionA[0].id) > -1) {\r\n            faFilter.Eps_TTM = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionA).val(), false);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionA1[0].id) > -1) {\r\n            faFilter.ME_ROE = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionA1).val(), true);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionA2[0].id) > -1) {\r\n            faFilter.NetSale_Growth_Avg_3Y = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionA2).val(), true);\r\n        }\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionA3[0].id) > -1) {\r\n            faFilter.Profit_Growth_Avg_3Y = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionA3).val(), true);\r\n        }\r\n    \r\n        // S\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionS[0].id) > -1) {\r\n            faFilter.AvgVol3M = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionS).val(), false);\r\n        }\r\n    \r\n        // L\r\n        if (window.variablesJS.arrFilterIds.indexOf(window.variablesJS.filterOptionL[0].id) > -1) {\r\n            faFilter.RS52W = window.filtersJS.getMinMaxValue($(window.variablesJS.filterOptionL).val(), false);\r\n        }\r\n    \r\n        // TA - Technical Analysis\r\n        var breakUpperBoundMACDvsSignalDaily = $('#btnFilterMACDUpOption:checked').val();\r\n        var breakLowerBoundMACDvsSignalDaily = $('#btnFilterMACDDownOption:checked').val();\r\n        var rsi14DailyT0ValuesGreater = $('#btnFilterRSIOverBuyOption:checked').val();\r\n        var rsi14DailyT0ValuesLess = $('#btnFilterRSIOverSellOption:checked').val();\r\n        var breakUpperBoundUpperBandsDaily = $('#btnFilterBollingerUpperBandOption:checked').val();\r\n        var breakLowerBoundLowerBandsDaily = $('#btnFilterBollingerLowerBandOption:checked').val();\r\n        var breakLowerBoundLowerBandsDaily = $('#btnFilterBollingerLowerBandOption:checked').val();\r\n    \r\n        var taFilter = { filterByKeys:[], filterByKeyAndValues: {}, compareResultOfTwoSMAs: null }\r\n        var filterByKeys = [];\r\n        if (breakUpperBoundMACDvsSignalDaily) {\r\n            filterByKeys.push(breakUpperBoundMACDvsSignalDaily);\r\n        }\r\n        if (breakLowerBoundMACDvsSignalDaily) {\r\n            filterByKeys.push(breakLowerBoundMACDvsSignalDaily);\r\n        }\r\n        if (rsi14DailyT0ValuesGreater) {\r\n            filterByKeys.push(rsi14DailyT0ValuesGreater);\r\n        }\r\n        if (rsi14DailyT0ValuesLess) {\r\n            filterByKeys.push(rsi14DailyT0ValuesLess);\r\n        }\r\n        if (breakUpperBoundUpperBandsDaily) {\r\n            filterByKeys.push(breakUpperBoundUpperBandsDaily);\r\n        }\r\n        if (breakLowerBoundLowerBandsDaily) {\r\n            filterByKeys.push(breakLowerBoundLowerBandsDaily);\r\n        }\r\n        taFilter.filterByKeys = filterByKeys;\r\n    \r\n        var booleanFilter = { \r\n            AvailableForFASearching: true,\r\n            Has5ConsecutiveTradingDays: true,\r\n            //Has10ConsecutiveTradingDays: true \r\n        }\r\n        var btnFilterOverTop = $('#btnFilterOverTop:checked').val();\r\n        if (btnFilterOverTop) {\r\n            booleanFilter[btnFilterOverTop] = true;\r\n        }\r\n        var data = {\r\n                    faFilter: faFilter,\r\n                    taFilter: taFilter,\r\n                    booleanFilter: booleanFilter,\r\n                    pageNumber: 1,\r\n                    pageSize: 10000,\r\n                    exchanges: exchanges,\r\n                    icbCodes: (fielSelection !== \"null\" ? [fielSelection] : null),\r\n                    sortColumn: \"Symbol\",\r\n                    isDesc: false,\r\n                    };\r\n        $(\"#showFiltersData\").html(`</br>${loadingHTML}`);\r\n        setTimeout(() => {\r\n            var res = window.variablesJS.headFiltersData;\r\n            $.ajax({\r\n                url: `${window.apiUrlDefined.STOCK_FILTERS_URL}`,\r\n                method: \"POST\",\r\n                data: JSON.stringify(data),\r\n                headers: {\r\n                    \"content-type\": \"application/json;charset=UTF-8\" // Or add this line\r\n                }\r\n            }).done(function (response) {\r\n                if (response && response.length > 0) {\r\n                    var codes = response.map(x => x.symbol);\r\n                    codes = window.filtersJS.getTickerCode(codes);\r\n                    if (codes.length > 0) {\r\n                        window.variablesJS.filtersDataJson = response.filter(x => codes.indexOf(x.symbol) > -1);\r\n                    } else {\r\n                        window.variablesJS.filtersDataJson = [];\r\n                    }\r\n                    res += window.filtersJS.processFiltersDataInput(\"changePercent1D\", \"desc\");\r\n                } else {\r\n                    res += `<tr><td colspan=\"12\" class=\"bold-text\">Không có mã nào thỏa mãn tiêu chí.</td></tr>`;\r\n                }\r\n                res += `</tbody></table>`;\r\n                $(\"#showFiltersData\").html(res);\r\n                window.commonJS.initTooltips();\r\n            }).fail(function (jqXHR, textStatus, error) {\r\n                $(\"#showFiltersData\").html(\"Có lỗi khi tải dữ liệu. Vui lòng thử lại sau!\");\r\n            });\r\n        }, 100);\r\n    },\r\n    \r\n    processFiltersDataInput : function (sortField, sortType) {\r\n        window.variablesJS.sortFiltersDefault = sortField;\r\n        var res = \"\";\r\n        if (window.variablesJS.filtersDataJson && window.variablesJS.filtersDataJson.length > 0) {\r\n            window.variablesJS.filtersDataJson.sort(function (a, b) {\r\n                var c = a[sortField] !== null ? a[sortField] : 0;\r\n                var d = b[sortField] !== null ? b[sortField] : 0;\r\n                if (sortType === \"desc\") {\r\n                    return d - c;\r\n                }\r\n                return c-d;\r\n            });\r\n            index = 0;\r\n            window.variablesJS.filtersDataJson.forEach(item => {     \r\n                var day = item.changePercent1D !== -99999999999 ? `${(item.changePercent1D).toFixed(2)}` : \"0\";\r\n                var week = item.changePercent1W !== -99999999999 ? (item.changePercent1W).toFixed(2) : \"N/A\";\r\n                var month_1 = item.changePercent1M !== -99999999999 ? (item.changePercent1M).toFixed(2) : \"N/A\";\r\n                var month_3 = item.changePercent3M !== -99999999999 ? (item.changePercent3M).toFixed(2) : \"N/A\";\r\n                var month_6 = item.changePercent6M !== -99999999999 ? (item.changePercent6M).toFixed(2) : \"N/A\";\r\n                var ytd = item.changePercentYTD !== -99999999999 ? (item.changePercentYTD).toFixed(2) : \"N/A\";\r\n                var year = item.changePercent1Y !== -99999999999 ? (item.changePercent1Y).toFixed(2) : \"N/A\";\r\n                var year_3 = item.changePercent3Yr !== -99999999999 ? (item.changePercent3Yr).toFixed(2) : \"N/A\";\r\n                res += `<tr class=\"tr-cursor\" onclick=window.commonJS.showTickerInfor(\"${item.symbol}\")>\r\n                            <td>${index + 1}</td>\r\n                            <td class=\"bold-text\">${item.symbol}</td>\r\n                            <td class=\"text-left\">${item.name}</td>\r\n                            <td>${item.exchange}</td>\r\n                            <td class=\"${day > 0 ? 'up' : day < 0 ? 'down' : 'reference'} bold\">${day}%</td>\r\n                            <td class=\"${week > 0 ? 'up' : week < 0 ? 'down' : 'reference'} bold\">${week}%</td>\r\n                            <td class=\"${month_1 > 0 ? 'up' : month_1 < 0 ? 'down' : 'reference'} bold\">${month_1}%</td>\r\n                            <td class=\"${month_3 > 0 ? 'up' : month_3 < 0 ? 'down' : 'reference'} bold\">${month_3}%</td>\r\n                            <td class=\"${month_6 > 0 ? 'up' : month_6 < 0 ? 'down' : 'reference'} bold\">${month_6}%</td>\r\n                            <td class=\"${ytd > 0 ? 'up' : ytd < 0 ? 'down' : 'reference'} bold\">${ytd}%</td>\r\n                            <td class=\"${year > 0 ? 'up' : year < 0 ? 'down' : 'reference'} bold\">${year}%</td>\r\n                            <td class=\"${year_3 > 0 ? 'up' : year_3 < 0 ? 'down' : 'reference'} bold\">${year_3}%</td>\r\n                        </tr>`;\r\n                index ++;\r\n            });\r\n        } else {\r\n            res += `<tr><td colspan=\"12\" class=\"bold-text\">Không có mã nào thỏa mãn tiêu chí.</td></tr>`;\r\n        }\r\n        return res;\r\n    },\r\n    \r\n    sortFiltersTable : function (time, self) {\r\n        window.variablesJS.sortFiltersType = \"desc\";\r\n        var childSpan = $(self).find(\"span\");\r\n        if (childSpan.hasClass(\"desc\")) {\r\n            window.variablesJS.sortFiltersType = \"asc\";\r\n        }\r\n    \r\n        var res = window.variablesJS.headFiltersData;\r\n        res += processFiltersDataInput(time, window.variablesJS.sortFiltersType);\r\n        res += `</tbody></table>`;\r\n        $(\"#showFiltersData\").html(res);\r\n        window.commonJS.initTooltips();\r\n        window.filtersJS.removeAllSortClass();\r\n        $(\"#\" + time).addClass(window.variablesJS.sortFiltersType);\r\n    },\r\n    \r\n    getTickerCode : function (codes) {\r\n        var selfBusinessChecked = $('#btnFilterSelfBusinessOption:checked').val();\r\n        var foreignChecked = $('#btnFilterForeignOption:checked').val();\r\n        var periodType = $(\"input[name='btnFiltersPeriodRadio']:checked\").val();\r\n        if (!selfBusinessChecked && !foreignChecked) return codes;\r\n        var selfBusinessCodesArr = [];\r\n        var foreignCodesArr = [];\r\n        if (selfBusinessChecked) {\r\n            var selfBusinessData = window.variablesJS.summaryDataJson.selfBusiness[periodType][variablesJS.actionSummaryDefault];\r\n            var selfBusinessCodes = selfBusinessData.map(x => x.ticker);\r\n            selfBusinessCodesArr = codes.filter(x => selfBusinessCodes.indexOf(x) !== -1);\r\n        }\r\n        if (foreignChecked) {\r\n            var foreignData = window.variablesJS.summaryDataJson.foreign[periodType][variablesJS.actionSummaryDefault];\r\n            var foreignCodes = foreignData.map(x => x.ticker);\r\n            foreignCodesArr = codes.filter(x => foreignCodes.indexOf(x) !== -1);\r\n        }\r\n        return Array.from(new Set(selfBusinessCodesArr.concat(foreignCodesArr)));\r\n    },\r\n\r\n    initSummaryData : function () {\r\n        $(\"#showFiltersData\").html(`</br>${window.commonJS.getLoadingHTML()}`);\r\n        Promise.all([\r\n            window.commonJS.fetchContentByUrl(window.apiUrlDefined.SYNTHESIS_DATA_URL)\r\n        ]).then((values) => {\r\n            if (values && values.length > 0) {\r\n                window.variablesJS.summaryDataJson = values[0];\r\n            }\r\n        }).then(() => {\r\n            //console.log('Done fetching content via JavaScript');\r\n            window.filtersJS.filterData();\r\n        }).catch((err) => {\r\n            console.error(err);\r\n            $(\"#showFiltersData\").html(\"Có lỗi khi tải dữ liệu. Vui lòng thử lại sau!\");\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(e) { \r\n    window.variablesJS.fielsSelections = window.commonJS.getSelectionFieldsHTML(\"fields-selection-options\");\r\n    $(\"#fields-selection\").html(window.variablesJS.fielsSelections);\r\n    window.variablesJS.filterOptionC = $(\"#filterOptionC\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-c\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionC.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionCMinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionCMaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionC1 = $(\"#filterOptionC1\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-c1\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionC1.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionC1MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionC1MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionC2 = $(\"#filterOptionC2\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-c2\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionC2.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionC2MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionC2MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionC3 = $(\"#filterOptionC3\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-c3\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionC3.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionC3MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionC3MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n    //==========================//\r\n    window.variablesJS.filterOptionA = $(\"#filterOptionA\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-a\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionA.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionAMinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionAMaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionA1 = $(\"#filterOptionA1\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-a1\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionA1.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionA1MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionA1MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionA2 = $(\"#filterOptionA2\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-a2\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionA2.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionA2MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionA2MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    window.variablesJS.filterOptionA3 = $(\"#filterOptionA3\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-a3\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionA3.on(\"slide slideStop\", function(slideEvt) {\r\n        $(\"#filterOptionA3MinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionA3MaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    //==========================//    \r\n    window.variablesJS.filterOptionS = $(\"#filterOptionS\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-s\",\r\n        scale: 'logarithmic'\r\n    });\r\n    window.variablesJS.filterOptionS.on(\"slide\", function(slideEvt) {\r\n        $(\"#filterOptionSMinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionSMaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    //==========================//\r\n    window.variablesJS.filterOptionL = $(\"#filterOptionL\").slider({\r\n        tooltip: 'hide',\r\n        id: \"filter-option-l\"\r\n    });\r\n    window.variablesJS.filterOptionL.on(\"slide\", function(slideEvt) {\r\n        $(\"#filterOptionLMinValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[0]));\r\n        $(\"#filterOptionLMaxValue\").val(new Intl.NumberFormat('de-DE').format(slideEvt.value[1]));\r\n    });\r\n\r\n    $(\".ckFilter\").change(function() {\r\n        var $input = $(this);\r\n        var id = $input.val();\r\n        var index = window.variablesJS.arrFilterIds.indexOf(id);\r\n        if (index > -1) {\r\n            window.variablesJS.arrFilterIds.splice(index, 1);\r\n        } else {\r\n            window.variablesJS.arrFilterIds.push(id);\r\n        }\r\n        if ($input.prop( \"checked\")) {     \r\n            $input.closest(\"div\").next(\"span\").removeClass(\"filter-title-default\");\r\n            $input.closest(\"div\").next(\"span\").addClass(\"filter-title\");\r\n        } else {\r\n            $input.closest(\"div\").next(\"span\").removeClass(\"filter-title\");\r\n            $input.closest(\"div\").next(\"span\").addClass(\"filter-title-default\");\r\n        }\r\n    });\r\n\r\n    $(\".btn-addition\").mousedown(function() {\r\n        var $input = $(this);\r\n        var value = $input.next(\".filter-values\").val().replaceAll(\".\",\"\");\r\n        var dataId = $input.attr(\"data-id\");\r\n        var max = $(\"#\"+dataId).data('sliderMax');\r\n        if ((Number(value) + 1) >  max) {\r\n            window.filtersJS.clearTimers();\r\n            return;\r\n        }\r\n        window.filtersJS.incrementValue($input.next(\".filter-values\"), value);\r\n        window.variablesJS.timeout = setTimeout(function() {\r\n            window.variablesJS.interval = setInterval(function() {\r\n              value = $input.next(\".filter-values\").val().replaceAll(\".\",\"\");\r\n              max = $(\"#\"+dataId).data('sliderMax');\r\n              if ((Number(value) + 1) >  max) {\r\n                window.filtersJS.clearTimers();\r\n                return;\r\n              }\r\n              window.filtersJS.incrementValue($input.next(\".filter-values\"), value);\r\n            }, 50);    \r\n        }, 300);   \r\n    });\r\n\r\n    $(\".btn-subtraction\").mousedown(function() {\r\n        var $input = $(this);\r\n        var value = $input.prev(\".filter-values\").val().replaceAll(\".\",\"\");\r\n        var dataId = $input.attr(\"data-id\");\r\n        var min = $(\"#\"+dataId).data('sliderMin');\r\n        if ((Number(value) - 1) <  min) {\r\n            window.filtersJS.clearTimers();\r\n            return;\r\n        }\r\n        window.filtersJS.decrementValue($input.prev(\".filter-values\"), value);\r\n        window.variablesJS.timeout = setTimeout(function() {\r\n            window.variablesJS.interval = setInterval(function() {\r\n                value = $input.prev(\".filter-values\").val().replaceAll(\".\",\"\");\r\n                min = $(\"#\"+dataId).data('sliderMin');\r\n                if ((Number(value) - 1) <  min) {\r\n                    window.filtersJS.clearTimers();\r\n                    return;\r\n                }\r\n                window.filtersJS.decrementValue($input.prev(\".filter-values\"), value);\r\n            }, 50);    \r\n        }, 300);   \r\n    });\r\n\r\n    $(\".btn-addition\").on(\"mouseup\", function() {\r\n        window.filtersJS.setValueSlider($(this));\r\n        window.filtersJS.clearTimers();\r\n    });\r\n    $(\".btn-subtraction\").on(\"mouseup\", function() {\r\n        window.filtersJS.setValueSlider($(this));\r\n        window.filtersJS.clearTimers();\r\n    });\r\n    window.filtersJS.initSummaryData();\r\n});\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/filters.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/filters.js"]();
/******/ 	
/******/ })()
;