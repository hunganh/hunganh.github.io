/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/statistics.js":
/*!******************************!*\
  !*** ./src/js/statistics.js ***!
  \******************************/
/***/ (() => {

eval("window.variablesJS.divStatisticsShowData = document.getElementById('showStatisticsData');\r\nwindow.variablesJS.divStatisticsTitle = document.getElementById('showStatisticsTitle');\r\n\r\nwindow.statisticsJS = {\r\n    initStatisticsData : function () {\r\n        window.commonJS.showLoading(\"showStatisticsLoading\");\r\n        setTimeout(() => {\r\n            var nodeName = document.getElementById(\"selfBusinessStatistics\").checked === true ? window.variablesJS.TU_DOANH : window.variablesJS.KHOI_NGOAI;\r\n            //var nodeName = window.variablesJS.typeDefault === \"selfBusiness\" ? window.variablesJS.TU_DOANH : window.variablesJS.KHOI_NGOAI;\r\n            $.ajax({\r\n                url: `${window.apiUrlDefined.STATISTICS_DATA_URL}/${nodeName}`,\r\n                async: false,\r\n                dataType: \"json\"\r\n            }).done(function (result) {\r\n                if (result) {\r\n                    var dataInput = [];\r\n                    var keys = Object.keys(result);\r\n                    if (keys && keys.length > 0) {\r\n                        keys.forEach(key => {\r\n                            if (key === \"olderItem\") {\r\n                                variablesJS.olderItem = result[key];\r\n                            } else {\r\n                                dataInput.push(result[key]);\r\n                            }\r\n                        });\r\n                        window.statisticsJS.processDataInput(dataInput);\r\n                    }\r\n                    window.commonJS.hideLoading(\"showStatisticsLoading\");\r\n                }\r\n            });\r\n        }, 100);\r\n    },\r\n    \r\n    processDataInput : function (values) {\r\n        window.variablesJS.divStatisticsShowData.innerHTML = \"\";\r\n        if (values && values.length > 0) {\r\n            values.forEach((content) => {\r\n                if (!window.variablesJS.dataJson) {\r\n                    window.variablesJS.dataJson = content;\r\n                    window.variablesJS.dataJson.totalCount = values.length;\r\n                } else {\r\n                    window.variablesJS.dataJson.items.push(content.items[0]);\r\n                }\r\n            });\r\n            // Sort data\r\n            window.variablesJS.dataJson.items.sort(function (a, b) {\r\n                var c = new Date(a.today.toDate);\r\n                var d = new Date(b.today.toDate);\r\n                return d - c;\r\n            });\r\n            for (let index = 0; index < window.variablesJS.dataJson.items.length; index++) {\r\n                //window.statisticsJS.createStatisticsReport(window.variablesJS.currentPeriod, window.variablesJS.dataJson.items[index], index);\r\n                for (let i = 0; i < window.variablesJS.actions.length; i++) {\r\n                    window.statisticsJS.createStatisticsReport(window.variablesJS.currentPeriod, window.variablesJS.dataJson.items[index], window.variablesJS.actions[i], index);\r\n                }\r\n            }\r\n            window.statisticsJS.setStatisticsTitle();\r\n        }\r\n        window.commonJS.hideLoading(\"showStatisticsLoading\");\r\n    },\r\n    \r\n    resetStatisticsData : function () {\r\n        window.commonJS.closePopover();\r\n        window.variablesJS.dataJson = null;\r\n        window.variablesJS.mappingDataJson = null;\r\n        window.variablesJS.divStatisticsShowData.innerHTML = \"\";\r\n        // document.getElementById(\"fileInput\").value = null;\r\n    },\r\n    \r\n    refreshStatisticsData : function () {\r\n        window.statisticsJS.resetStatisticsData();\r\n        window.statisticsJS.initStatisticsData();\r\n    },\r\n    \r\n    readFileAsText : function (file) {\r\n        return new Promise(function (resolve, reject) {\r\n            let fr = new FileReader();\r\n            fr.onload = function () {\r\n                resolve(fr.result);\r\n            };\r\n            fr.onerror = function () {\r\n                reject(fr);\r\n            };\r\n            fr.readAsText(file);\r\n        });\r\n    },\r\n    \r\n    changeStatisticsType : function (type) {\r\n        window.statisticsJS.resetStatisticsData();\r\n        window.variablesJS.typeDefault = type;\r\n        window.statisticsJS.initStatisticsData();\r\n    },\r\n    \r\n    changeStatisticsAction : function (action) {\r\n        window.commonJS.closePopover();\r\n        window.commonJS.showLoading(\"showStatisticsLoading\");\r\n        window.variablesJS.actionDefault = action;\r\n        window.statisticsJS.processStatisticsData(variablesJS.currentPeriod);\r\n        window.commonJS.hideLoading(\"showStatisticsLoading\");\r\n    },\r\n    \r\n    processStatisticsData : function (period) {\r\n        window.variablesJS.currentPeriod = period;\r\n        if (window.variablesJS.dataJson && window.variablesJS.dataJson.items && window.variablesJS.dataJson.items.length > 0) {\r\n            window.variablesJS.divStatisticsShowData.innerHTML = \"\";\r\n            for (let index = 0; index < window.variablesJS.dataJson.items.length; index++) {\r\n                //window.statisticsJS.createStatisticsReport(period, window.variablesJS.dataJson.items[index], index);\r\n                for (let i = 0; i < window.variablesJS.actions.length; i++) {\r\n                    window.statisticsJS.createStatisticsReport(period, window.variablesJS.dataJson.items[index], window.variablesJS.actions[i], index);\r\n                }\r\n            }\r\n        }\r\n        window.statisticsJS.setStatisticsTitle();\r\n    },\r\n    \r\n    createStatisticsReport : function (period, dataJsonInput, action, dataIndex) {\r\n        var data = action === \"netBuy\" ? dataJsonInput[period].netBuy : dataJsonInput[period].netSell;\r\n        var netTradeValueColumn = window.commonJS.getNetTradeValueColumnByActionValue(action);\r\n        var title = \" (\" + new Date(dataJsonInput[period].fromDate).toLocaleDateString(window.variablesJS.defaultLocale) + \" - \" + new Date(dataJsonInput[period].toDate).toLocaleDateString(window.variablesJS.defaultLocale) + \") - \" + `Tổng Giá Trị ${action === \"netBuy\" ? \"Mua Ròng: <span class='badge sum-value-area font-weight-bold font-14 dashed-border-bottom'>\" : \"Bán Ròng: <span class='badge bg-danger font-weight-bold font-14 dashed-border-bottom'>\"}` + new Intl.NumberFormat(window.variablesJS.numberLocale).format(dataJsonInput[period][netTradeValueColumn]) + \" đ </span>\";\r\n        var table = document.createElement(\"table\");\r\n        table.classList.add(\"left-position\", \"table\", \"table-bordered\", \"table-striped\", \"table-hover\");\r\n        var thead = document.createElement(\"thead\");\r\n        var tr = thead.insertRow(-1);                   // table row.\r\n        var thTime = document.createElement(\"th\");\r\n        thTime.setAttribute(\"colspan\", 9);\r\n        thTime.innerHTML = title;\r\n        tr.appendChild(thTime);\r\n        thead.appendChild(tr);\r\n        table.appendChild(thead);\r\n        tr = thead.insertRow(-1);\r\n        for (var i = 0; i < window.variablesJS.statisticsHeadTitle.length; i++) {\r\n            var th = document.createElement(\"th\");      // table header.\r\n            th.innerHTML = window.variablesJS.statisticsHeadTitle[i].indexOf(\"statistics-popover\") > -1 ? window.variablesJS.statisticsHeadTitle[i].replace(\"statistics-popover\", \"statistics-popover-\" + action) : window.variablesJS.statisticsHeadTitle[i];\r\n            tr.appendChild(th);\r\n        }\r\n        \r\n        var tbody = document.createElement(\"tbody\");\r\n        tbody.setAttribute(\"id\",\"table-statistics-popover-\" + action);\r\n        // add json data to the table as rows.\r\n        for (var i = 0; i < data.length; i++) {\r\n            tr = tbody.insertRow(-1);\r\n            tr.setAttribute(\"onClick\", `window.commonJS.showTickerInfor(\"${data[i][\"ticker\"]}\")`);\r\n            tr.classList.add(\"tr-cursor\");\r\n            var prvItem = dataIndex === 0 && window.variablesJS.dataJson.items.length > 1 ? window.variablesJS.dataJson.items[dataIndex + 1] : window.variablesJS.olderItem; //window.commonJS.getFirstItemData(dataJsonInput[period].toDate);\r\n            var columnName = window.commonJS.getColumnName();\r\n            var volumeColumnName = window.commonJS.getVolumeColumnName();\r\n            if (!prvItem) {\r\n                window.commonJS.addCell(tr, Number(i + 1));\r\n            } else {\r\n                var prvPosition = action === \"netBuy\" ? prvItem[period].netBuy.findIndex(x => x.ticker === (data[i][window.variablesJS.statisticsCols[1]])) : prvItem[period].netSell.findIndex(x => x.ticker === (data[i][window.variablesJS.statisticsCols[1]]));\r\n                if (prvPosition > -1) {\r\n                    window.commonJS.addCell(tr, Number(i + 1) + window.commonJS.getPositionIcon(prvPosition, i));\r\n                } else {\r\n                    window.commonJS.addCell(tr, Number(i + 1));\r\n                }\r\n            }\r\n            var priceChange = data[i][\"priceChange\"];\r\n            var percentPriceChange = data[i][\"percentPriceChange\"] * 100;\r\n            var price = percentPriceChange > 0 || percentPriceChange < 0 ? (priceChange/data[i][\"percentPriceChange\"]).toFixed(0) : data[i][\"matchPrice\"];\r\n            var closePrice = data[i][\"matchPrice\"];\r\n    \r\n            window.commonJS.addCell(tr, Number(i + 1) <= 10 ? '<b class=\"top10\">' + data[i][\"ticker\"] + '</b>' : data[i][\"ticker\"]);\r\n            window.commonJS.addCell(tr, '<div class=\"text-left\">' + window.commonJS.getIcbNameBySymbol(data[i][\"ticker\"]) + '</div>');\r\n            window.commonJS.addCell(tr, volumeColumnName !== \"\" ? new Intl.NumberFormat(window.variablesJS.numberLocale).format(data[i][volumeColumnName]) : \"&#8722;\");\r\n            window.commonJS.addCell(tr, new Intl.NumberFormat(window.variablesJS.numberLocale).format(data[i][columnName]));\r\n            window.commonJS.addCell(tr, '<span class=\"' + (Number(priceChange) > 0 ? \"up\" : Number(priceChange) < 0 ? \"down\" : \"reference\") + '\">' + new Intl.NumberFormat(window.variablesJS.numberLocale).format(closePrice) + '</span>');\r\n            window.commonJS.addCell(tr, '<span class=\"' + (Number(priceChange) > 0 ? \"up\" : Number(priceChange) < 0 ? \"down\" : \"reference\") + '\">' + new Intl.NumberFormat(window.variablesJS.numberLocale).format(priceChange) + ' ('+ Number(percentPriceChange).toFixed(2) + \"%\" + ')</span>');\r\n            // window.commonJS.addCell(tr, '<span class=\"' + (Number(percentPriceChange) > 0 ? \"up\" : Number(percentPriceChange) < 0 ? \"down\" : \"reference\") + '\">' + Number(percentPriceChange).toFixed(2) + \"%\" + '</span>');\r\n            window.commonJS.addCell(tr, new Intl.NumberFormat(window.variablesJS.numberLocale).format(price));\r\n        }\r\n        table.appendChild(tbody);\r\n        // Now, add the newly created table with json data, to a container.\r\n        window.variablesJS.divStatisticsShowData.appendChild(table);\r\n    },\r\n    \r\n    setStatisticsTitle : function (action) {\r\n        var today = new Date().toLocaleDateString(window.variablesJS.defaultLocale);\r\n        var updateDate = new Date(window.variablesJS.dataJson.items[0][\"today\"].toDate).toLocaleDateString(window.variablesJS.defaultLocale);\r\n        var updateDateStr = ` ${window.variablesJS.dataJson && window.variablesJS.dataJson.items.length > 0 ? \"- Dữ liệu ngày \" + updateDate : \"\"} `;\r\n        if (updateDate === today) {\r\n            window.variablesJS.divStatisticsTitle.classList.remove(\"bg-out-of-date\");\r\n            window.variablesJS.divStatisticsTitle.classList.add(\"bg-latest\");\r\n        } else {\r\n            window.variablesJS.divStatisticsTitle.classList.remove(\"bg-latest\");\r\n            window.variablesJS.divStatisticsTitle.classList.add(\"bg-out-of-date\");\r\n        }\r\n        window.variablesJS.divStatisticsTitle.innerHTML = \"Thống Kê \".concat(window.variablesJS.typeDefault === \"selfBusiness\" ? \"Tổ Chức Trong Nước \" : \"Khối Ngoại \", \"Mua/Bán Ròng\") + updateDateStr;\r\n        // Init Industries Filter Popover\r\n        window.commonJS.closePopover();\r\n        for (let i = 0; i < window.variablesJS.actions.length; i++) {\r\n            window.commonJS.initIndustriesSelectionPopover('statistics-popover-' + window.variablesJS.actions[i]);\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(e) {\r\n    window.statisticsJS.initStatisticsData();\r\n});\r\n\r\nwindow.addEventListener('load', function () {\r\n    var upload = document.getElementById('fileInput');\r\n    // Make sure the DOM element exists\r\n    if (upload) {\r\n        upload.addEventListener('change', function () {\r\n            // Make sure a file was selected\r\n            if (upload.files.length > 0) {\r\n                window.variablesJS.dataJson = null;\r\n                window.variablesJS.divStatisticsShowData.innerHTML = \"\";\r\n                window.commonJS.showLoading(\"showStatisticsLoading\");\r\n                let readers = [];\r\n                for (let index = 0; index <= upload.files.length - 1; index++) {\r\n                    readers.push(window.statisticsJS.readFileAsText(upload.files[index]));\r\n                }\r\n                // Trigger Promises\r\n                Promise.all(readers).then((values) => {\r\n                    var data = values.map(x => JSON.parse(x));\r\n                    window.variablesJS.olderItem = null;\r\n                    window.statisticsJS.processDataInput(data);\r\n                });\r\n            }\r\n        }, false);\r\n    }\r\n});\n\n//# sourceURL=webpack:///./src/js/statistics.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/statistics.js"]();
/******/ 	
/******/ })()
;